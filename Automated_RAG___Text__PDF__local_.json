{
  "name": "Automated RAG - Text, PDF (local)",
  "nodes": [
    {
      "parameters": {},
      "id": "690cd0d1-2daa-4077-b533-49ec22cd6fe6",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.1,
      "position": [
        960,
        620
      ],
      "credentials": {
        "postgres": {
          "id": "wNsKNwSA0lH9zZDZ",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "model": "llama3.1:8b",
        "options": {
          "format": "json"
        }
      },
      "id": "f1624bbf-7188-4315-9f82-53324cfb83b0",
      "name": "Ollama Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        700,
        620
      ],
      "credentials": {
        "ollamaApi": {
          "id": "Aau8u1qIOobuUGJb",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "model": "llama3.1:8b",
        "options": {}
      },
      "id": "b4fd7953-3cdf-4e88-87d8-cfbacd234953",
      "name": "Ollama Model",
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        2000,
        500
      ],
      "credentials": {
        "ollamaApi": {
          "id": "Aau8u1qIOobuUGJb",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "name": "documents",
        "topK": 5
      },
      "id": "a4606e74-f8c2-4deb-a81f-d2a887807327",
      "name": "Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        1780,
        340
      ]
    },
    {
      "parameters": {
        "model": "nomic-embed-text:latest"
      },
      "id": "21d2efd2-762c-43e3-b0ba-f7dfbc9236e8",
      "name": "Embeddings Ollama",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        1640,
        620
      ],
      "credentials": {
        "ollamaApi": {
          "id": "Aau8u1qIOobuUGJb",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data}}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "project",
                "value": "={{ $('Settings').item.json.project }}"
              },
              {
                "name": "filename",
                "value": "={{ $('Settings').item.json.filename }}"
              }
            ]
          }
        }
      },
      "id": "ca4c3e5f-4147-4df1-9351-86fc58c6e0d2",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        1520,
        1120
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d7fcc66d-0794-4ce2-a43b-80f783f4a903",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1520,
        1280
      ]
    },
    {
      "parameters": {
        "model": "nomic-embed-text:latest"
      },
      "id": "b5895f74-198c-425e-b92e-7406a2af9570",
      "name": "Embeddings Ollama1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        1360,
        1120
      ],
      "credentials": {
        "ollamaApi": {
          "id": "Aau8u1qIOobuUGJb",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Local RAG AI Agent looping over input questions",
        "height": 527,
        "width": 1609,
        "color": 3
      },
      "id": "996c55b2-b8f0-4f0f-bb5d-60471044357d",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -80,
        220
      ]
    },
    {
      "parameters": {
        "content": "## Agent Tools for Local RAG",
        "height": 528.85546469693,
        "width": 583.4552380860637,
        "color": 5
      },
      "id": "d66ca4e7-a7ca-4970-9f3d-fdfcee65ef5e",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1580,
        220
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0fb715e2-9272-4789-bc57-40121b7e8ab5",
              "name": "chatInput",
              "value": "={{ $json['Questions:']}}",
              "type": "string"
            },
            {
              "id": "a22db31b-6387-40d0-b7db-9353b6061b22",
              "name": "sessionId",
              "value": "={{ $json['Questions:'].hash()}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ac5edca2-7d0a-49a9-aa7b-8977130139c3",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        640,
        420
      ]
    },
    {
      "parameters": {
        "triggerOn": "folder",
        "path": "/files/invoices",
        "events": [
          "add"
        ],
        "options": {
          "followSymlinks": true,
          "usePolling": true
        }
      },
      "id": "b884b174-a040-49d2-9fad-2a638f485f5e",
      "name": "Local File Trigger",
      "type": "n8n-nodes-base.localFileTrigger",
      "position": [
        120,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "df327b01-961c-4a49-8455-58c3fbff111a",
              "name": "project",
              "type": "string",
              "value": "={{ $json.path.split('/').slice(0, 4)[2] }}"
            },
            {
              "id": "6b7d26f9-3a38-417e-85d0-4e9d42476465",
              "name": "path",
              "type": "string",
              "value": "={{ $json.path }}"
            },
            {
              "id": "bb4471c7-d894-4739-99a6-4be247794ffa",
              "name": "filename",
              "type": "string",
              "value": "={{ $json.path.split('/').last() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b86ae234-8937-4978-b79e-d8df8106d2eb",
      "name": "Settings",
      "type": "n8n-nodes-base.set",
      "position": [
        300,
        1100
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "5f3801cf-fc9f-480d-82df-b6e147052d9e",
      "name": "Extract from PDF",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        880,
        940
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "ods",
        "options": {}
      },
      "id": "af1d4353-978f-4f92-a671-1b675f9d5178",
      "name": "Extract from DOCX",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        880,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "ee84f9a9-b900-4fc3-9de2-c8a2be160ae0",
      "name": "Extract from TEXT",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        880,
        1260
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Build Knowledge DB: Import and watch folder for documents\nTODO: when file is changed, update VDB",
        "height": 694,
        "width": 2244,
        "color": 7
      },
      "id": "04252c40-f017-4095-97ef-d5b567eb7c77",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        800
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileType }}",
                    "rightValue": "pdf"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pdf"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3a5f509d-46fe-490c-95f0-35124873c63e",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileType }}",
                    "rightValue": "docx"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "docx"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "75188d2f-4bea-44ea-a579-9b9a1bd1ea93",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json }}",
                    "rightValue": ""
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "everything else"
            }
          ]
        },
        "options": {}
      },
      "id": "6a7ea909-bc09-4b6b-84c1-37e4b7eaa237",
      "name": "Get FileType",
      "type": "n8n-nodes-base.switch",
      "position": [
        680,
        1100
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "fileSelector": "={{ $json.path }}",
        "options": {}
      },
      "id": "fc60e501-f82a-4496-8e7b-773d1bf1fd03",
      "name": "Read/Write Files from Disk",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        480,
        1100
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {}
      },
      "id": "fbb0658c-83b4-47dd-9a69-b5256397cc7b",
      "name": "Qdrant Vector Store Insert",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        1420,
        900
      ],
      "credentials": {
        "qdrantApi": {
          "id": "0DRCqukMtWy6DuWx",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {}
      },
      "id": "024678c3-1df6-45c7-841e-a413046367c7",
      "name": "Qdrant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        1600,
        480
      ],
      "credentials": {
        "qdrantApi": {
          "id": "0DRCqukMtWy6DuWx",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are an AI assistant specialized in extracting event details from user input and formatting them into a structured JSON output. Your task is to analyze the given input and extract the information.\n\nPlease follow these steps to process the input and generate the required output:\n\n1. Carefully read and analyze the user input.\n2. Extract the following information:\n   - A summary of what is asked about\n   - The concept that is asked about\n   - Quantity associated with the concept\n3. Prepare a JSON object with the following structure:\n   {\n    \"summary\": \"one sentence summary of what is asked about\",\n    \"concept\": \"the concept asked about in the input question\",\n    \"quantity\": \"the total number associated with the concept across all retrieved items\"\n   }\n\nEnsure that your output is a valid JSON object, not a string, and that it exactly matches the structure specified in the schema. Do not include any additional properties or formatting."
        }
      },
      "id": "fbbd189a-5955-49b4-a39f-c92b79f918a6",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        800,
        420
      ]
    },
    {
      "parameters": {
        "operation": "xlsx",
        "binaryPropertyName": "={{ $json}}",
        "options": {
          "fileName": "answers",
          "headerRow": true
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        640,
        240
      ],
      "id": "3c0cd799-a82a-46c3-b46f-cca9b28ed3b3",
      "name": "Convert to File",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Input string\nconst inputString = $input.item.json.output;\n\n// Parsing the string to a JSON object\ntry {\n  const jsonObject = JSON.parse(inputString);\n  console.log(\"Parsed JSON Object:\", jsonObject);\n\n  // Optional: Return the JSON object\n  return jsonObject;\n} catch (error) {\n  console.error(\"Error parsing JSON:\", error.message);\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1140,
        420
      ],
      "id": "665fde8f-93be-46a5-8045-2a24dadbbc09",
      "name": "Parse output",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        440,
        300
      ],
      "id": "d63d6cfb-a0c6-4b41-8dd5-77f5be2820ef",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {
          "headerRow": true
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        260,
        300
      ],
      "id": "5cdf2c47-b3d8-4e81-a3ae-4ad46169ad27",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "fileSelector": "/files/questions.xlsx",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        100,
        300
      ],
      "id": "8f03a058-462b-47d1-907f-9b006de71dc9",
      "name": "Read questions"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -60,
        300
      ],
      "id": "aad04ffc-403e-4950-a0ad-37e6a4a5803d",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "da64ffde-1e8f-478d-baea-59fc05e6d3ce",
              "name": "data",
              "type": "string",
              "value": "={{ $json.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "59c8c183-9df4-429f-b11d-6559e9183c94",
      "name": "Extract text",
      "type": "n8n-nodes-base.set",
      "position": [
        1100,
        1100
      ],
      "typeVersion": 3.3
    }
  ],
  "pinData": {},
  "connections": {
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Model": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store Insert",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama1": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store Insert",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Local File Trigger": {
      "main": [
        [
          {
            "node": "Settings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Settings": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from PDF": {
      "main": [
        [
          {
            "node": "Extract text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from DOCX": {
      "main": [
        [
          {
            "node": "Extract text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from TEXT": {
      "main": [
        [
          {
            "node": "Extract text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get FileType": {
      "main": [
        [
          {
            "node": "Extract from PDF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from DOCX",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from TEXT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Get FileType",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Parse output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        []
      ]
    },
    "Parse output": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read questions": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Read questions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract text": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store Insert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "273a6155-b4aa-44c4-85bf-f30c8030075a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3fc6ccfa4bc1f9d35063ee0557481e8700a1c0f7540927ea61a39c1fc5baa847"
  },
  "id": "KmotjWK8XzCnFKZQ",
  "tags": []
}